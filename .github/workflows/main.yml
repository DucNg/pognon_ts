# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2

      - name: test the backend
        run: go test ./...
      
      - name: test the frontend
        run: |
          cd pognon-web-ui
          yarn
          yarn test
          
  build_deploy:
    runs-on: ubuntu-latest
    
    needs: test
      
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup SSH
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-host: ${{ secrets.SSH_HOST }}
      
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
          
      - name: build the backend
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          go build .
          scp -q pognon_ts pognon@"$SSH_HOST":~/pognon_ts_$GITHUB_SHA
          
      - name: restart systemd unit
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh "$SSH_HOST" \
          ln -sr pognon_ts_$GITHUB_SHA pognon_ts \
          systemctl --user restart pognon
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
         
      - name: build the frontend
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          cd pognon-web-ui
          yarn
          yarn build
          scp -qr build pognon@"$SSH_HOST":~/pognon-web-ui/
         

  
